/*
For use with FEWD Matching Game project.

Note to reviewer: TODO

Test/Development environments
	VS Code version 1.38.1
	Google Chrome 65.0.3325.146 (64-bit), devtools and browser.

Primary references:
	Used under academic 'fair use.'
		greenfelt.jpg:  https://www.onlinefabricstore.net/bright-green-felt-fabric-.htm
*/

html {

/* Making sure margin and padding are in a known start state */
	margin: 0;
	padding: 0;

	font-size: 1em;  /* sizes are calculated individually by style, but this is the fallback */

	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box; /* height and width = padding + border */

}

/* TODO: Accessibility */

a:focus {outline: none;}
button:focus {outline: none;}

.no-focus-outline a:focus,
.no-focus-outline button:focus {
  outline: none;
}

/*
Insure that box-sizing value, set in the html selector, is inherited by all children in the DOM tree.
*/
*,
*::after,
*::before {

	-moz-box-sizing: border-box;
	-webkit-box-sizing: inherit;
   box-sizing: inherit;
}

.layout {

	display: grid;
	width: 100%;

	grid-template-rows: auto auto auto auto auto auto;
	grid-column-gap: 1%;
	grid-row-gap: 0%;
	grid-template-columns: 100%;
	justify-content: stretch;
}

.header-container {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: row;
	width: 100%;
	text-align: center;
	margin: 0 0 0 0;
}

.logo-container {
	--logo-width: 7vw;	/* Used in game name container to align text to true center */
	width: var(--logo-width);
}

/*
Retrieved from https://worldvectorlogo.com/logo/udacity, used under academic 'fair use.'
*/
.udacity-logo {
	width: 100%;
	object-fit: contain;
	justify-self: stretch;
	align-self: stretch;
}

/* Highlight Udacity logo when clicked to enter test mode */
.test-mode {
	background-color: #EA3556;
}

/* right padding same as logo width so name centers */
.game-name-container {
	width: 100%;
	padding: 0 var(--logo-width) 0 0;
}

.game-name {

/* TODO: I pulled this from someones elses work.  I have have the reference somwhere, just need to add it here.
At a screen size of <--low-screen> the font is <--low-px>, at a screen size of <--high-screen> the font size is <--high-px>
*/
	--low-px: 45;
	--high-px: 75;
	--low-screen: 450;
	--high-screen: 1300;

	--tempfs: calc( (var(--low-px) * 1px) /* 1px just converts a unitless value to a px value */
	+ (var(--high-px) - var(--low-px))
	* ( (100vw - (var(--low-screen) * 1px))
	/ ( var(--high-screen) - var(--low-screen)) ));

	font-size: var(--tempfs);
	line-height: calc(var(--tempfs) + .5vw);
}

/**/
.dashboard-container {
		display: flex;
		flex-direction: row;
		width: 100%;
		padding: 0 0 0 6%;
		justify-content: center;
		text-align: center;
		align-items: center;

		--low-px: 30;
		--high-px: 45;
		--low-screen: 450;
		--high-screen: 1300;
	}

.stars {
	width: 15%;

/* TODO - stars don't need this, remove on next commit
	--low-px: 30;
	--high-px: 45;
	--low-screen: 750;
	--high-screen: 1300;
	*/
}

/* Need read-only field to count games played */
.tally-count {
	width: 5%;
}

/* Reset button */
.reset {

	width: 15%;
}

/* Running timer */
.current-timer {

	text-align: center;
	width: 20%;
}

/* Variables defined in individual element styles */
.dashboard-font {
	--tempfs: calc( (var(--low-px) * 1px) /* 1px just converts a unitless value to a px value */
	+ (var(--high-px) - var(--low-px))
	* ( (100vw - (var(--low-screen) * 1px))
	/ ( var(--high-screen) - var(--low-screen)) ));

	font-size: var(--tempfs);
	line-height: calc(var(--tempfs) + .5vw);

}

/* Supress display of the two div's that contain the locations of the card images */
.card-front-image, .card-back-image {
	display: none;
}

.cards-container {
	display: grid;
	width: 100%;
	height: 100%;
	padding: 2vh;

	grid-template-columns: 1fr 1fr 1fr 1fr;
	grid-template-rows: repeat(4, 1fr);
	grid-column-gap: 2vh;
	grid-row-gap: 1vh;
	justify-content: space-around;
	background-image: url("../img/greenfelt.jpg");
  background-size: cover;

}

.card {
	min-width: 305px;
	min-height: 329px;

	width: 100%;
	object-fit: contain;

	justify-self: stretch;
	align-self: stretch;

	border-radius: 50px;
	padding: 10px 0 10px 0;
	position: relative;
	background-size: cover;

}

/*  NEEDED?????
.nomatch {
	outline: 6px dashed yellow;
	box-shadow: 0 0 0 8px;
	animation: 1s animateBorder infinite;
}
*/

/* NEEDED ???????
.card-front-images {
}

.card-back-images {
}
*/

/* NEEDED ??????
@keyframes animateBorder {
	to {
		outline-color: #EA3556;
		box-shadow: 0 0 0 6px yellow;
	}
}
*/

/*  ================================== */

.blink {
	animation: blinking .5s 3;
}
/*  ================================== */


@keyframes blinking-red {
	0%{
		background-color: #000000;
/*		color: #ddd; */
	}
	100%{
		background-color: #ff3d50;
/*		color: #fff; */
	}
}

/* */
.blinking-red {
	font-size: 1.3em;
	font-weight: bold;
	padding: 10px;
	border: 20px solid red;
}

@keyframes blinking-green {
	0%{
		background-color: #000000;
	}
	100%{
		background-color:  #00f05c;
	}
}

/* TODO border same as background color ?????? */
.blinking-green {
	font-size: 1.3em;
	font-weight: bold;
	padding: 10px;
	border: 20px solid #7FFF00;
}

/* TODO Used for reset button background.  This also needs to be coordinated with padding of button */
.reset-blink-red {
/*	font-size: 1.3em;
	font-weight: bold;
*/	padding: 10px;
	animation: blinking-red .5s infinite;
}
