/*
TODO - update with correct information

https://www.google.com/search?q=html+green+felt+background+free&rlz=1C1CHBD_enUS834US834&tbm=isch&source=iu&ictx=1&fir=BU5-3hJuehUS6M%253A%252C3axJgjSVWcf4fM%252C_&vet=1&usg=AI4_-kTguqiS-Hpq-lcsTmOQBrZtUbXO9Q&sa=X&ved=2ahUKEwj_u-2v2qXhAhUwZN8KHaSzBRIQ9QEwAHoECAkQBA#imgrc=BU5-3hJuehUS6M:

Used with index.html from Project 2, Matching Game, in the Udacity Front-end Web Developer nanodegree program.

Test/Development environments

VS Code version 1.21.0, Shell 1.7.9, Renderer 58.0.3029.110 (64-bit)
Firefox Quantum 58.0.2 (64-bit), devtools and browser.
Google Chrome 65.0.3325.146 (64-bit), devtools and browser.
Paint.net 4.21.6589.7045

Methodology

Implementation

Testing

Note to reviewer:

Primary references:

https://zellwk.com/blog/viewport-based-typography/
http://mathforum.org/library/drmath/view/60433.html
https://www.madebymike.com.au/writing/precise-control-responsive-typography/
https://css-tricks.com/snippets/css/a-guide-to-flexbox/
https://css-tricks.com/snippets/css/complete-guide-grid/

greenfelt.jpg:  https://www.onlinefabricstore.net/bright-green-felt-fabric-.htm

*/

html {

/* Making sure margin and padding are in a known start state */
	margin: 0;
	padding: 0;

	font-size: 1em;  /* sizes are calculated individually by style, but this is the fallback */

	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box; /* height and width = padding + border */

}

/* Accessibility for image tab index border */
/* not accessible */
a:focus {outline: none;}
button:focus {outline: none;}

/*  Accessible but not working yet */
.no-focus-outline a:focus,
.no-focus-outline button:focus {
  outline: none;
}

/*
Insure that box-sizing value, set in the html selector, is inherited by all children in the DOM tree.
*/
*,
*::after,
*::before {

	-moz-box-sizing: border-box;
	-webkit-box-sizing: inherit;
   box-sizing: inherit;

}

.layout {

	display: grid;
	width: 100%;

	grid-template-rows: auto auto auto auto auto auto;
	grid-column-gap: 1%;
	grid-row-gap: 0%;
	grid-template-columns: 100%;
	/*
	grid-template-rows: auto auto 200px 50px 1fr 1fr;
	grid-column-gap: 2%;
	grid-row-gap: 2%;
	grid-template-columns: 100px;
	*/
	justify-content: stretch;

}

.header-container {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: row;
	width: 100%;
	text-align: center;
	margin: 0 0 0 0;
/*	min-height: 200px; */

}

.logo-container {
	--logo-width: 7vw;	/* Used in game name container to align text to true center */
	width: var(--logo-width);
}

/*
Retrieved from https://worldvectorlogo.com/logo/udacity
*/
.udacity-logo {
	width: 100%;
	object-fit: contain;
	justify-self: stretch;
	align-self: stretch;
}

.test-mode {
	background-color: #EA3556;
}

.game-name-container {
	width: 100%;
	padding: 0 var(--logo-width) 0 0;  /* right padding same as logo width so name centers */

}

.game-name {

/*	color: # */
/*	font-family: "", ?????, sans-serif; */
/* At a screen size of <--low-screen> the font is <--low-px>, at a screen size of <--high-screen> the font size is <--high-px>
*/
	--low-px: 45;
	--high-px: 75;
	--low-screen: 450;
	--high-screen: 1300;

	--tempfs: calc( (var(--low-px) * 1px) /* 1px just converts a unitless value to a px value */
	+ (var(--high-px) - var(--low-px))
	* ( (100vw - (var(--low-screen) * 1px))
	/ ( var(--high-screen) - var(--low-screen)) ));

	font-size: var(--tempfs);
	line-height: calc(var(--tempfs) + .5vw);

/*
	font-size: 4em;
	width: auto;
	height: auto;
	text-align: center;
	display: inline-block;
*/
}

/**/
.dashboard-container {

		display: flex;
		flex-direction: row;
		width: 100%;
		padding: 0 0 0 6%;
		justify-content: center;
		text-align: center;
		align-items: center;

		--low-px: 30;
		--high-px: 45;
		--low-screen: 450;
		--high-screen: 1300;

	}

.stars {

	width: 15%;

	--low-px: 30;
	--high-px: 45;
	--low-screen: 450;
	--high-screen: 1300;

}

/* Need read-only field to count games played */
.tally-count {
	width: 5%;
}

/* */
.reset {

	width: 15%;

}

.current-timer {

/*	line-height: 2vh; */
	text-align: center;
/*	background: green; */
	width: 20%;

}

/* Variables defined in individual element styles */
.dashboard-font {
	--tempfs: calc( (var(--low-px) * 1px) /* 1px just converts a unitless value to a px value */
	+ (var(--high-px) - var(--low-px))
	* ( (100vw - (var(--low-screen) * 1px))
	/ ( var(--high-screen) - var(--low-screen)) ));

	font-size: var(--tempfs);
	line-height: calc(var(--tempfs) + .5vw);

}

/*
.alerts-border {
	border: 3px #ff0000 solid;
	animation: blinkBorder 1s;
	animation-iteration-count:  5;
}
*/

/* @keyframes blinkBorder { 50% { border-color: yellow; } } */

/* Don't display the two div's that contain the location of the card images */
.card-front-image, .card-back-image {
	display: none;
}

.cards-container {
	display: grid;
	width: 100%;
	height: 100%;
	padding: 2vh;

	grid-template-columns: 1fr 1fr 1fr 1fr;
	grid-template-rows: repeat(4, 1fr);
	grid-column-gap: 2vh;
	grid-row-gap: 1vh;
	justify-content: space-around;
	background-image: url("../img/greenfelt.jpg");
  background-size: cover;

}

.card {
	min-width: 305px;
	min-height: 329px;

/*	height: 100%; */
	width: 100%;
	object-fit: contain;

	justify-self: stretch;
	align-self: stretch;

	border-radius: 50px;
	padding: 10px 0 10px 0;
	position: relative;
	background-size: cover;

}

.nomatch {
	outline: 6px dashed yellow;
	box-shadow: 0 0 0 8px;
	animation: 1s animateBorder infinite;
}

.card-front-images {
}

.card-back-images {
}

@keyframes animateBorder {
	to {
		outline-color: #EA3556;
		box-shadow: 0 0 0 6px yellow;
	}
}

/*  ================================== */

.blink {
	animation: blinking .5s 3;
}
/*  ================================== */


@keyframes blinking-red {
	0%{
		background-color: #000000;
/*		color: #ddd; */
	}
	100%{
		background-color: #ff3d50;
/*		color: #fff; */
	}
}

@keyframes blinking-green {
	0%{
		background-color: #000000;
/*		color: #ddd; */
	}
	100%{
		background-color:  #00f05c;
/*		color: #fff; */
	}
}

/* */
.blinking-red {
	font-size: 1.3em;
	font-weight: bold;
	padding: 10px;
	border: 20px solid red;
/*	animation: blinking-red .3s linear 3;
	animation-name: blinking-red;
	animation-duration: .4s;
	animation-timing-function: linear;
	animation-delay: 0;
	animation-iteration-count: 3;
*/
}

.blinking-green {
	font-size: 1.3em;
	font-weight: bold;
	padding: 10px;
	border: 20px solid #7FFF00;
/*	animation: blinking-green .3s 3; */
}

.reset-blink-red {
	font-size: 1.3em;
	font-weight: bold;
	padding: 10px;
	animation: blinking-red .5s infinite;
/*	animation-name: blinking-red;
	animation-duration: .5s;
	animation-iteration-count: infinite;
*/
}
